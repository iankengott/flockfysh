1. Make compatible with RoboFlow format
    - Understand how their datasets are exported, and what our input format needs to be
        - How will the labels formats look? 
    - Configure input format to be in that way

2. Create a seperate model_utils.py file
    - Create a new folder raw_dataset by copying the datset folder directory
        - Format of raw_dataset will be the same as dataset (raw_dataset/[label1] ... raw_dataset/[label2] etc.)
    
3. Begin Training Loop

    - Load all the images in the raw_dataset folder into PyTorch Dataset format using PIL (potentially unnecessary)
        - Perform dataaugs on the images, (save them to the ds, future idea)
    - Setup yaml format to be compatible with yolov5, clone git repo
    - Train an untrained yolov5 model on the data
        - Figure out how the training loop looks like for yolov5 in pytorch (without their software), or make a decision to see how to use their software

4. Perform an Image Sprint on a single category: (search for 100 images)
    - Scrape data from web using
        - SerpAPI for now
        - Bs4?? Selenium??? in future
    - Get images, (save them if necessary), run model on batches of them
    - Save the images where the model predicts it is an image with prob >= THRESHHOLD (0.5, to define later) to raw_dataset/label (label for that category)

5. Repeat Step 4 for each category in labels

6. Build CLI (if necessary),  readme, github repo, and deploy initial version!


Future Ideas:
    - Upgrade current CLI to use argparse
    - Enforce a "none" category to help model look into 
    - Scrape the data ourselves
    - Build a web UI interface to make it easier for people to store and do
    - Provide storage and computing resources for ppl 
    - custom dataaugs
    - Train GANs on single categories to generate new images